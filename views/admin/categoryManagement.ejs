<%- include ('adminHeader.ejs')%>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
              <h1>TRENDY</h1>
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="/adminPanel"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="/adminProducts"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Product Management</span>
                    </a>
                </li>
                
                <li class="menu-item ">
                    <a class="menu-link" href="/users"> <i class="icon material-icons md-person"></i>
                        <span class="text">User Management</span>
                    </a>
                
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/adminCategory"> <i class="icon material-icons md-stars"></i>
                        <span class="text">Category Management</span> </a>
                </li>

                <li class="menu-item ">
                    <a class="menu-link" href="/adminOrders"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Order Management</span>
                    </a>
                </li> 
                
                <li class="menu-item ">
                    <a class="menu-link" href="/adminCoupon"> <i class="icon material-icons md-redeem"></i>
                        <span class="text">Coupons</span>
                    </a>
                   
                </li>
                
                
                <li class="menu-item">
                    <a class="menu-link" href="page-reviews.html"> <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li>
                
                <li class="menu-item">
                    <a class="menu-link" disabled href="#"> <i class="icon material-icons md-pie_chart"></i>
                        <span class="text">Banner Management</span>
                    </a>
                </li>
            </ul>
            <hr>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-settings"></i>
                        <span class="text">Settings</span>
                    </a>
                    
                </li>
                
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
              <a class="dropdown-item text-danger" href="/adminLogout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                
            </div>
        </header>




<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Category Management</h2>
            <p>Manage Categories.</p>
        </div>
        <div>
            <!-- <a href="#" class="btn btn-light rounded font-md">Export</a>
            <a href="#" class="btn btn-light rounded  font-md">Import</a> -->
            <button class="btn btn-primary btn-sm rounded" type="button" data-bs-toggle="modal" data-bs-target="#myModalAdd">Create new</button>
        </div>
        <!-- add category form -->
        <div class="modal fade text-start" id="myModalAdd" tabindex="-1" aria-labelledby="myModalLabelAdd" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="myModalLabelAdd">Add Categories</h5>
                    <button class="btn-close btn-close-white" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <form id="categoryForm" method="post" enctype="multipart/form-data">
                      <div class="mb-3">
                        <label class="form-label" for="modalInputEmail1">Category</label>
                        <input name="name" class="form-control" id="category" type="text" name="category"  >
                        <p style="color: red;" id="categoryErr"></p>
                      </div>
                      <div class="mb-3">
                        <label class="form-label" for="modalInputEmail1">description</label>
                        <textarea class="form-control" id="description" name="description" ></textarea>
                        <p style="color: red;" id="descriptionErr"></p>
                      </div>
                      <div class="modal-footer">
                       
                        <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary" >Add</button>
                        <div style="width: 20px;"></div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
        </div>
        <!-- end of add category -->
    
        <!-- Modal for Editing Category -->
        <div class="modal fade text-start" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editModalLabel">Edit Category</h5>
                  <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <form method="post" id="editCategoryForm" onsubmit="submitEditForm(event)">
                    <input type="hidden" id="editCategoryId" name="id">
                    <div class="mb-3">
                      <label class="form-label" for="editCategoryName">Category</label>
                      <input class="form-control" id="editCategoryName" type="text" name="category">
                    </div>
                    <div class="mb-3">
                      <label class="form-label" for="editCategoryDescription">Description</label>
                      <input class="form-control" id="editCategoryDescription" type="text" name="description">
                    </div>
                    <div class="modal-footer">
                      <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
                      <button class="btn btn-primary" type="submit">Save</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
    </div>
    <div class="col-lg-12">
        <div class="card mb-0">
          <div class="card-header"></div>
          <div class="card-body pt-0">
            <div class="table-responsive">
              <table class="table mb-0 table-striped table-hover">
                <thead>
                  <tr>
                    <th>No.</th>
                    <th>Category</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>Updation</th>
                  </tr>
                </thead>
                <tbody>
                  
                        <% data.forEach((item, index) => { %>
                          <tr>
                            <th scope="row"><%= index + 1 %></th>
                            <% if (item.active) { %>
                              <td><%= item.name %></td>
                              <td><%= item.description %></td>
                            <% } else { %>
                              <td class="text-decoration-line-through"><%= item.name %></td>
                              <td class="text-decoration-line-through"><%= item.description %></td>
                            <% } %>
                      
                            <% if (item.active) { %>
                              <td>Listed</td>
                            <% } else { %>
                              <td>Unlisted</td>
                            <% } %>
                      
                            <td class="d-flex">
                              <a href="#" data-bs-toggle="modal" data-bs-target="#editModal"
                                data-id="<%= item._id %>"
                                data-name="<%= item.name %>"
                                data-description="<%= item.description %>"
                                data-active="<%= item.active %>">
                                <i class="fa-solid fa-pen-to-square me-4 ms-2"></i>
                              </a>
                              <% if (item.active) { %>
                                <a href="#" onclick="deleteCategory('<%= item._id %>')"><i class="fa-regular fa-circle-xmark"></i></a>
                              <% } else { %>
                                <a href="#" onclick="deleteCategory('<%= item._id %>')"><i class="fa-solid fa-check"></i></a>
                              <% } %>
                            </td>
                          </tr>
                        <% }) %>
                            
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    
 </section>
 <!-- <%- include('adminFooter.ejs')%> -->
 

 <script>

    // add category start
     document.getElementById('categoryForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const categoryName = document.getElementById("category").value.trim();
            const categoryErr = document.getElementById("categoryErr");
            const description = document.getElementById("description").value.trim();
            const descriptionErr = document.getElementById("descriptionErr");

            let isValid = true;
       
            categoryErr.innerHTML = "";
            descriptionErr.innerHTML = "";

            if (categoryName === '') {
                categoryErr.innerHTML = "Please Enter the Category Name.";
                isValid = false;
            } else {
                const categoryRegex = /^[a-zA-Z\s-]*$/;
                if (!categoryRegex.test(categoryName)) {
                    categoryErr.innerHTML = "Please Enter a Valid Category.";
                    isValid = false;
                }
            }

            if (description === '') {
                descriptionErr.innerHTML = "Please Enter Description.";
                isValid = false;
            }

            if (isValid) {
                
                
                axios.post('/adminCategory', { categoryName, description })
                .then(function (response) {
                  // Handle successful response
                  if (response.data.success) {
                    Swal.fire({
                      icon: 'success',
                      title: 'Success',
                      text: 'Category added successfully!'
                    }).then(() => {
                      location.reload(); // Reload the page to reflect the changes
                    });
                  } else {
                    // Handle unsuccessful response (when response.data.success is not true)
                    Swal.fire({
                      icon: 'error',
                      title: 'Error',
                      text: response.data.message || 'Failed to add category.'
                    });
                  }
                })
                .catch(function (error) {
                  // Handle network or server errors
                  Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to communicate with server.'
                  });
                  console.error('Error adding category:', error);
                });

            }
        });
    //   add category End



    // edit category start
    

  document.addEventListener('DOMContentLoaded', function() {
    const editModal = document.getElementById('editModal');
    editModal.addEventListener('show.bs.modal', function(event) {
      const button = event.relatedTarget;
      const id = button.getAttribute('data-id');
      const name = button.getAttribute('data-name');
      const description = button.getAttribute('data-description');

      const modalTitle = editModal.querySelector('.modal-title');
      const categoryIdInput = editModal.querySelector('#editCategoryId');
      const categoryNameInput = editModal.querySelector('#editCategoryName');
      const categoryDescriptionInput = editModal.querySelector('#editCategoryDescription');

      modalTitle.textContent = 'Edit Category: ' + name;
      categoryIdInput.value = id;
      categoryNameInput.value = name;
      categoryDescriptionInput.value = description;
    });
  });

  function submitEditForm(event) {
    event.preventDefault();

    const form = document.getElementById('editCategoryForm');
    const formData = new FormData(form);

    Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to save the changes?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, save it!',
      customClass: {
              confirmButton: 'sweetAlert-custom-button'
             }
    }).then((result) => {
      if (result.isConfirmed) {
        axios.post('/editCategory', {
          id: formData.get('id'),
          category: formData.get('category'),
          description: formData.get('description')
        })
        .then(response => {
          if (response.data.success) {
            Swal.fire({
              title:'Saved!',
              text:'Your changes have been saved.',
              icon:'success',
              customClass: {
                    confirmButton: 'sweetAlert-custom-button'
                 }
            }).then(() => {
              location.reload(); // Reload the page to reflect the changes
            });
          } else {
            Swal.fire({
              title:'Failed!',
              text:'Failed to update category.',
              icon:'error',
              customClass: {
                   confirmButton: 'sweetAlert-custom-button'
                   }
          });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            title:'Error!',
            text: 'An error occurred.',
            icon:'error',
            customClass: {
                 confirmButton: 'sweetAlert-custom-button'
                 }
        });
        });
      }
    });
  }
 // end category end


    // delete category Start


    async function deleteCategory(id) {
    try {
        const response = await axios.post('/deleteCategory', { id });
        
        if (response.data.success) {
            await Swal.fire({
                icon: "success",
                title: "Success",
                text: response.data.message,
                customClass: {
                            confirmButton: 'sweetAlert-custom-button'
                         }
            });
            // window.location.href = "/adminCategory";
            location.reload(); // Reload the page to reflect the changes
        } else {
            await Swal.fire({
                icon: "error",
                title: "Error",
                text: response.data.message,
                customClass: {
                            confirmButton: 'sweetAlert-custom-button'
                         }
            });
            // window.location.href = "/adminCategory";
            location.reload(); // Reload the page to reflect the changes
        }
    } catch (error) {
        console.error('Error deleting category:', error);
        await Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred while deleting the category. Please try again.",
            customClass: {
                            confirmButton: 'sweetAlert-custom-button'
                         }
        });
    }
}

 </script>





<%- include('adminFooter.ejs')%>